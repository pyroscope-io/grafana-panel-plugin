name: CI

env:
  CYPRESS_CACHE_FOLDER: cypress/cache

on:
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "14.17"

      - name: Pull dependencies
        run: yarn

      - name: Sign plugin
        run: yarn sign
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }} # Requires a Grafana API key from Grafana.com.

      # Smoke test
      # We already tested it extensively in the other repository
      - name: Run grafana server
        run: docker-compose -f docker-compose.yml up -d
      - name: Run tests
        run: yarn cy:ci
        env:
          CYPRESS_VIDEO: true
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-screenshots
          path: pyroscope/cypress/screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: pyroscope/cypress/videos

      # Setup the go environment, since the grafana plugin linter isn't distributed as a binary
      - name: Setup Go environment
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"

      - name: Get plugin metadata
        id: metadata
        run: |
          sudo apt-get install jq

          export GRAFANA_PLUGIN_ID=$(cat dist/plugin.json | jq -r .id)
          export GRAFANA_PLUGIN_VERSION=$(cat dist/plugin.json | jq -r .info.version)
          export GRAFANA_PLUGIN_TYPE=$(cat dist/plugin.json | jq -r .type)
          export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-${GRAFANA_PLUGIN_VERSION}.zip
          export GRAFANA_PLUGIN_ARTIFACT_CHECKSUM=${GRAFANA_PLUGIN_ARTIFACT}.md5

          echo "::set-output name=plugin-id::${GRAFANA_PLUGIN_ID}"
          echo "::set-output name=plugin-version::${GRAFANA_PLUGIN_VERSION}"
          echo "::set-output name=plugin-type::${GRAFANA_PLUGIN_TYPE}"
          echo "::set-output name=archive::${GRAFANA_PLUGIN_ARTIFACT}"
          echo "::set-output name=archive-checksum::${GRAFANA_PLUGIN_ARTIFACT_CHECKSUM}"

          echo ::set-output name=github-tag::${GITHUB_REF#refs/*/}

      - name: Package plugin
        id: package-plugin
        run: |
          mv dist ${{ steps.metadata.outputs.plugin-id }}
          zip ${{ steps.metadata.outputs.archive }} ${{ steps.metadata.outputs.plugin-id }} -r
          md5sum ${{ steps.metadata.outputs.archive }} > ${{ steps.metadata.outputs.archive-checksum }}
          echo "::set-output name=checksum::$(cat ./${{ steps.metadata.outputs.archive-checksum }} | cut -d' ' -f1)"

      - name: Lint plugin
        run: |
          export PATH="$(go env GOPATH)/bin/:$PATH"

          git clone https://github.com/grafana/plugin-validator
          pushd ./plugin-validator/pkg/cmd/plugincheck2
          go install
          popd
          plugincheck2 -config lint.config.yaml ${{ steps.metadata.outputs.archive }}
